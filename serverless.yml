service: course-booking-serverless
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ap-southeast-1
  architecture: arm64
  memorySize: 768
  timeout: 15

package:
  individually: true

# custom:
#   bundle:
#     linting: false

functions:
  courseBookingAuth:
    handler: src/handlers/auth/courseBookingAuth.default
  signup:
    handler: src/handlers/auth/signup.default
    events:
      - http:
          method: POST
          path: /signup
          cors: true
  login:
    handler: src/handlers/auth/login.default
    events:
      - http:
          method: POST
          path: /login
          cors: true
  logout:
    handler: src/handlers/auth/logout.default
    events:
      - http:
          method: POST
          path: /logout
          cors: true
          authorizer: 
            name: courseBookingAuth
            resultTtlInSeconds: 0
  refreshAccessToken:
    handler: src/handlers/auth/refreshAccessToken.default
    events:
      - http:
          method: POST
          path: /refresh-access-token
          cors: true
  checkEmail:
    handler: src/handlers/auth/checkEmail.default
    events:
      - http:
          method: POST
          path: /check-email
          cors: true
  getUserDetails:
    handler: src/handlers/user-api/getUserDetails.default
    events:
      - http:
          method: GET
          path: /user
          cors: true
          authorizer: 
            name: courseBookingAuth
            resultTtlInSeconds: 0
  enroll:
    handler: src/handlers/user-api/enroll.default
    events:
      - http:
          method: POST
          path: /enroll/{courseId}
          cors: true
          authorizer: 
            name: courseBookingAuth
            resultTtlInSeconds: 0
          request:
            parameters:
              paths:
                courseId: true
  addCourse:
    handler: src/handlers/course-api/addCourse.default
    events:
      - http:
          method: POST
          path: /course
          cors: true
          authorizer: 
            name: courseBookingAuth
            resultTtlInSeconds: 0
  updateCourse:
    handler: src/handlers/course-api/updateCourse.default
    events:
      - http:
          method: PUT
          path: /course/{courseId}
          cors: true
          authorizer: 
            name: courseBookingAuth
            resultTtlInSeconds: 0
          request:
            parameters:
              paths:
                courseId: true
  getCourse:
    handler: src/handlers/course-api/getCourse.default
    events:
      - http:
          method: GET
          path: /course/{courseId}
          cors: true
          request:
            parameters:
              paths:
                courseId: true
  getAllCourses:
    handler: src/handlers/course-api/getAllCourses.default
    events:
      - http:
          method: GET
          path: /all-courses
          cors: true
  getActiveCourses:
    handler: src/handlers/course-api/getActiveCourses.default
    events:
      - http:
          method: GET
          path: /courses
          cors: true
  getEnrolledCourses:
    handler: src/handlers/course-api/getEnrolledCourses.default
    events:
      - http:
          method: GET
          path: /enrolled-courses
          cors: true
          authorizer: 
            name: courseBookingAuth
            resultTtlInSeconds: 0
  archiveCourse:
    handler: src/handlers/course-api/archiveCourse.default
    events:
      - http:
          method: PATCH
          path: /course/status/{courseId}
          cors: true
          authorizer: 
            name: courseBookingAuth
            resultTtlInSeconds: 0
          request:
            parameters:
              paths:
                courseId: true  

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

plugins:
  - serverless-dotenv-plugin
  # - serverless-bundle
  - serverless-esbuild
  - serverless-offline